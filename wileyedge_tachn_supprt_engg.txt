
Production Support Role - High Level
1. 24*7 Production Envionment Support. 
2. Proactive Monitoring & Alerting Automation.
3. Investigating past Incidents
4. Managing Release process of Software.
5. Application Support.
6. Database Support.
7. Backup & Restoration.
8. Root Cause Analysis & Permanent Fixes.
9. Status Updates & Reporting
10.Documentation.


Summary - Role of Production Support
1. Ensure systems & applications are running smoothly by monitoring & tracking alerts.
2. Help resolve issues in production environments(Break-Fixes);
3. Perform routine maintenance of systems to avoid breakdown.
4. Perform testing to identify issues before applications are deployed to Production
5. Help developers to identify improvements.
6. Supporting customers by providing quality services & resolving issues faced by them quickly 
7. Doing root cause analysis when issues occur to avoid recurrance of issuess in future.
8. Supporting the databases where application related data is stored(includes backup & restoration).
9. Write technical documentation, creating knowledge articles, runbooks, FAQs etc.

What is Incident?
An Incident is an unplanned interruption or a reduction in the quality of service. Potential disruption/Potential reduction of quality of services.

Purpose of Incident Management: The purpose of incident management is to minimize the negative impact of incidents by restoring normal service operations quickly as possible.


Triggers for Incident
1.Proactive Monitoring Tools(1st line of defence).
2.End users via Service Desk.
3.Failed Changes/Releases
4.Operational Issues(Bugs, Defects).


Incident Workflow
1.Incident Identification.
2.logging.
3.Categorization.
4.Prioritization.
5.Response.
6.Diagnosis.
7.Escalation.
8.Resolution & Recovery.
9.Closure.
Urgency, Priority & Impact
urgency => How quickly something needs to be done.
Impact => The extent of user impact.
Priority => Relative importance of something in comparison to others.
Severity => The Degree of impact(How small or big the impact is)

Major Incidents
A major incident is a highest-impact, highest-urgency incident that affects many users, depriving the business of one or more crucial services.

The goal of an organization is to have an effective & efficient system for responding to major incidents. The requirements are to minimize the impact of service interuptions.

Ensure that stakeholders are well-informed of service interuptions, degradations, & resolutions.

Ensure that an appropriate Incident Manager/Major Incident Team/Management Group are in place to manage a major incident.

Conduct a review of each major incident once service is restored. Its purpose is to analyze the incident, & understand what can be done to prevent a similar incident in the future. This review also provides an opportunity to evaluate the incident responses process & identify areas for improvement.

Create a problem for RootCause Analysis.


- Problem Management -
What is a Problem?
	- A Cause or a potential cause of one or more incidents.
	
Purpose - The purpose of Problem Management is to reduced the likelihood & impact of incidents by identifying actual & potential causes of incidents & managing Workarounds & Known Errors.

WORKAROUND:-
A temporary solution that reduces or eliminates the impact of an incident or problem for which a full resolution is not yet available.
Workarounds are used by both Problem & Incident Managements.
Workarounds are generally 1st step towards problem resolution(not permanent fixes).

KNOWN ERROR :-
A problem that has been analyzed but not yet resolved/fixed.

Why don't we fix Known Errors?
	- Significant Cost Involved(not enough value received).
	- Minor Issues(not worth bothering).
	- Significant Design changes needed(can't be done for products already sold/need redesign).
	- Not a priority(other things are taking precedence).
	- Have a workaround which works as good as fix.
	- Waiting for next release(will be fixed in future versions or updates).
	
Incident Vs. Problem
	A Problen is one or more incidents with an unknown root cause, whereas incident arises as soon as something breaks or stops working disrupting normal service.
	Incident management system aims at restoring services quickly whereas incident problem management aims at finding a permanent fix. 
	
	Problem Classification
1. High Risk - An Incient or issue of such a severe potent
ial that the organizations must take immediate steps to ensure there is no repeat of the issue or at least mitigate the effects of a possible future occurrence.

2. High Visibility - An Incident of such nature that any recuurence of the incident will reflect poorly on the reputation of the organization. This is despite the low true impact of the incident.

3. High Frequency - An Incident or issue which occurs frequently enough that regardless of individual incident impact, the issue warrants investigation & remediation.

4. Cumulative Duration - Despite a lower severity than other issue & a lower frequency relative to other issues the overall time spent to resolve the issues of a particular type warrants investigation & remediation.

- PROBLEM WORKFLOW -
	1.Detection & Logging =>2
	2.Categorization & Prioritization =>3
	3.Investigation & Diagnosis =>4
	4.Workarounds & Known Errors =>5
	<=> Known Error Database 4
	5.Resolution & Closure 
	Major Problem Reviews =<4
	Errors from Development/Suppliers =<5
	
Reactive Problem Management
 y-axis : Service Level
 x-axis : Time
	1.Incident
	2.Incident Mng.
	3.Service restore
	4.Problem Mng.
		i.Additional sources of information
		ii.Full or partial service restoration
	5.RCA(Root Cause Analysis)
	6.Problem Fix
Proactive Problem Management
 y-axis : Service Level
 x-axis : Time
 	1.Data Input
		i.Past incident analysis
		ii.Industry information
		iii.Vendor information
		iv.Past problem analysis
		v.Event monitoring & management
		vi.Personal expertise & situational awareness
	2.Problem Management
		i.problem found
		ii.RFC(Request for Change)
	3.Problem Fix
	
Problem & Change Management
	- If something isn't working it won't get fixed magically by itself, so we need to make changes 
	- Changes can be submitted once we have identified a fix & the cost, benefit & risk of the change analysis is done & it is justified that a change is required.
	
What is Change?
	- Change is any addition , modification or removal of anything thst could have a direct or indirect effect on services.
	
	Purpose - The purpose of Change Control is to maximize the number of successful IT changes by ensuring that risks have been assessed, authoring changes to proceed & managing a change schedule.
	
	TYPES OF CHANGES :-
STANDARD => Low Risk, Low Cost, pre-defined, Fixed Scope 
Ex. Weekly Reboot of a Server, Monthly Backup of a Server

EMERGENCY => High Risk, Error Prone, Business Impacting, P1/P2 related generally, Should be kept minimum, > 24 hrs, <5% of your total
Ex. Emergency restart of a Server to restore Services.

NORMAL => Need to be scheduled, assessed, & authorized
Ex. Monthly patching of a Server
	
Change Windows/Maintenance windows =>
Change Windows are sometimes referred to as maintenance windows are set of predefined, regularly Scheduled block of time set aside to do maintenance activities & implement changes.
Change Windows are usually identified based on when there will be minimal impact to customers.

Change Freeze Peroid/Blackout Window =>
Change Freeze Peroid/Blackout Window =>
Change Freeze peroid or Blackout window is a peroid which no changes are allowed to either part of the infrestructure or all the infrastructure.
	
SERVICE REQUEST MANAGEMENT
	What is a Service Request?
	- A service request is a request from a user or user's authorized representative that initiates  a service action that has been agreed upon as a normal part of service delivery.
 Examples :- Password Reset, Installation of Software, Printer Configuration, Request for access to a Shared Drive, Providing Access to New Hires, Outlook Configuration
 
 	Service Request Categories
	- Request for a Service Delivery
	- Request for information
	- Request for provision of a resource or service
	- Request for access to a resource or service
	- Feedbacks, compliments, & complaints
  
   Service Request Phases
   	- Initiation
	- Approval
	- Fulfillment
	-----MANAGEMENT-----
	
	
   Service Request Best-Practices
   	- Service request may have simple or quite complex workflows.
	- Steps to fulfill requests should be well-known & proven.
	- Self-service & Automation should be leveraged as much as possible.
	- Existing workflow models should be used whenever possible.
	
	
	
KNOWLEDGE MANAGEMENT
	Knowledge management is the process of creating, using, sharing, & maintaining organizational knowledge so that business users can use it whenever needed.
	
KNOWLEDGE MANAGEMENT DATABASE
	A central repository or a database where all knowledge is stored in the form of Knowledge Articles.
	
	
	DIKW Model
	
	Data -> Information -> Knowledge - Wisdow
	
 Types of Knowledge
 	- Tacit knowlegde represents an intuitive kind of know-how deeply rooted in a personal experience.
	Ex.: Expertise, Ideas, Skills, Insights, Individual Skills, Education, Cultural beliefs, Intuition, Observations, Values, Attitudes, Mental models.
	- Explicit Knowlegde refers to a formalized knowlegde that is stored in a designated place.
	Ex.: Manuals, How-to guides, Memos, Documents, Videos, News, Procedures, Databases, Records.
	
 Benefits of Knowledge Management ==>>
  - Reduces the amount of time must be spent on training employees. Since your team will consistently receive precise & up-to-date information, they will require fewer formal training to meet the performance expectations.
  - Decreases the number of errors that are made by team members. If your team has the adequate source of knowledge that is needed to take formal decisions, then they are far less likely to go outsise the track.
  - Implementation of the ITIL Knowledge Management process cuts down the effort to complete any steps of service process more than once. When everyone has process awareness, it is less likely that a known step will be performed incorrectly.
  - Availability of instant knowledge allows IT professionals to respond to sustomer demands faster & more effectively. Your employees will know the way to answer customer questions more effectively, thus reducing the number of times you have to intervene or respond to negative feedback about the lack of knowledge of you about the lack of knowlwdge of your team members.
  - The relevent part of knowledge stored in the SKMS can be made available to the end user by creating a user portal. Thus creating a self-service desk portal for common users. This can significantly decrease the pessure on the service desk associates, which will eventually increase the quality of service.
  

SERVICE LEVEL MANAGEMENT
	PURPOSE
	- The purpose of the service-level management practice is to set clear business-based targets for service performance so that the delivery of a service can be properly assessed , monitored, & managed against these targets.
	
	- SLA: A service Level Agreement is a document agreement between a ervice provider & a customer that identifies the services required & the expected level of service.
	
	SLA GOAL
	- The goal for SLM is to maintain & improve IT Service quality through a constant cycle of negotiating, agreeing, monitoring, & reviewing reporting upon IT Service achievements & instigation of actions to eradicate poor service-in-line with business or cost justification.
	- Through these methods, IT & its customers can develop a better relationship.
	
	SLA Activities
	- Negotiating the Service Levels with the customer & Service Provider.
	- Defining Service Levels(99.99% availability).
	- Documenting the Service Level(as per the SLA).
	- Agreeing the Service Levels by signing the SLA.
	- Monitoring the Service Levels to ensure compliance with agreement(governance).
	- Performing Performing Service reviews from time to time(internal & with customers).
	- Capturing & Reporting Service performance.
	- Creating SLA, Service reviews reports.
	- Identifying areas of improvement of services using SLA data.
	- Termination of SLAs if agreement is breached.
	- Enforcing penalties if SLA breach is identified.
	
 WATERMELON EFFECT
 
 SLA, OLA & UC
  customer -> SLA -> Service Provider -> OLA 1-> Internal Organization
  							          -> UC 2-> Vendor/Supplier
	: SLA - Service Level Agreement
	  OLA - Organization Level Agreement
	  UC - Underpinning Contract
	  
 Monitoring & Event Management
  Purpose
  	- To systematically observes services & service components & record & report selected changes of state identified as events.
  Event
  	- An event can be defined as any change of state that has significancwe for the management of a configuration item(CI) or IT service.
	
	TYPES OF EVENTS
		Event => Filter => 1. Exception, 2. Warning, 3. Information
		
	Informational
		- These are generated purely for informational purposes & generally, denote successful completion of a task. These are type of event that does not require any immediate action & does not represent an exception. These are stored in the log files for a predetermined period.
	
	Warning
		- This type of event is generated when a device or service is reaching a threshold limit. This type of warning is intended to notify the appropriate team or tool to take necessary actions to prevent an exception from occuring.
		
	Exception
		- It signifies that a threshold limit for a service or component performance is breached. This Exception/Error means that the service or component is experiencing a failure, performance degradations, or loss of functionally, & impacting the business operation.
		
 Objectives & Purpose of Monitoring & Event Management
 	- The primarily objective of the ITIL Monitoring & Event Management Process is to ensure that the Configuration Items(CIs) & services are constantly monitored.
	- This process aims to filter & categorize Eventa ao that appropriate actions can be taken if required.
	- Detect & investigate any change of state that has significance for the management of a CI or IT services.
	- Provide a means for early detection of incidents.
	- Decide the appropriate actions for events & ensure these are communicated to the appropriate functions.
	- Provide a mechenism to compare actual operating performance against design standards & SLAs.
	- Provide a basis for service assurance, reporting & service improvement.
	
 Scope of Monitoring & Event Management
 	- The scope if Event Management covers aspect of service management that can be automated & required to be controlled.
	- These include:
		-- Configuration Items:- Includes CIs that need to be continuously monitored to identify any status change
		-- Environmental conditions
		-- Software license:- monitor the usage to ensure optimum/legal license allocation & utilization.
		-- Security
		-- Normal activity & informational events.
		

IT ASSET MANAGEMENT
	- An IT Asset is any valuable component that can contribute to the delivery of an IT product or service.
	
	Purpose
		- The purpose of IT Asset Management is to plan & manage the full lifecycle of an IT Asset to help the organization.
		
	Purpose of IT Asset Management
		- Maximize value
		- Cost control
		- Manage risks
		- Supports decision-making about purpose, resuse, & retirement of assets.
		- Meet regulatory & contractual requirements.

 IT Assets Lifecycle
 	PLAN
		- The strategy & decisions about what assets are needed within the organization, how to procure them, how they will be used, & how they will be funded. Planning often includes TCO & Cost/Benefit Analysis of alternatives.
	
	ACQUIRE
		- The procurement of assets through building, buying, leasing or licensing them.
	
	COMMISSION
		- Introducing the asset into the IT ecosystem. This includes installation, integrating with other components, establishing operations/support process, & provising user access.
	
	MAINTAIN
		- As the asset is being operated & used, maintenance, repair, upgrades & overhauls may be necessary to maximize value to users, extend the useful life of the asset, mitigate risks 7 reduce support costs.
		
	RETIRE
		- At the end of an asset's useful life, the asset must be disposed or otherwise dispositioned. Retirement often includes transitioning users to other resources, updating asset records, canceling support agreements, terminating license renewals, & initiating the planning for replacement assets.
		
	
TYPES OF IT ASSET MANAGEMENT
	IT Asset Management
		- It is the overaching set of business practices that join financial, contractual, & inventory functions to support lifecycle management & strategic decision-making for the IT environment. ITSM is part of a company's IT Service Management function.
		
	Digital Asset Management
		- It is a part of the company's intellectual property management functions & is a form of electronic media content management concerned with managing digital assets such as photos, videos, & digital data that the company either produces or licenses from third parties.
		
	Software Asset Management & License Management
		- These are concerned with effectively managing, controlling, & protecting software assets. This includes those produced by the company & those by 3rd party to ensure that all software in use within the organization is properly paid for & in compliance with licensing agreements.
		
 HOW WILL ASSET TRACKING IMPACT YOUR IT CAREER?
 	- Comprehensive Directory of all IT Assets
	- Check Items In & Out (Know where the item is at any given time)
	- Track Items(Look up a complete history of an asset/track vendors & service providers)
	- Schedule Maintenance(& notify techs of lease expirations)
	
CONFIGURATION MANAGEMENT
	Purpose
	- To ensure the accurate & reliable information about the configuration of services, & the CIs that support them, is available when & where it is needed.
	Confiration Items
	- Any component that needs to be managed in order to deliver an IT service.
	
What is CI?
Configuration Items:Examples of common CIs
@ Servives - Email, printing, collaboration, presentation,  data processing, user registration
@ Software - Applications, databases, Virtual machines, containers, licenses
@ Hardware - Servers, routers, computers, switches, printers
@ Devices - Laptops, tablets, smartphones, monitors, keyboards, mice
@ Documents - Policies, governance, release notes, user guides, troubleshooting manuals
@ Locations - Offices, data centers, server rooms
@ Staff - Service desk agents, support specialists, developers


Asset vs. CI
- An IT Asset is any valuable component that can contribute to the delivery of an IT product or service.
- A CI is any component that needs to be managed in order to deliver an IT service.
- All CIs are assets, however, not all assets are CIs.
- Configuration items have an elwment of control required to deliver services, & this is not usually a preserve fot all assets.
- So, for example, knowledge or furniture can be classified as assets for your company. But they are not CIs, as they are not controlled for purposes of delivering services.

Asset Management                  
	- Deals with the financial aspects of objects/assets.
	- A process that manages the assets throughout their lifecycle.
	- Integrated with procurement system.
	- Focused towards the IT corporate crowd.
	- The primary user is the asset manager.
Configuration Management Database(CMDB)
    - Overseas the Management of the configuration items.
    - A tool that stores all information related to the CIs in one place.
	- Integrated with change management system.
	- Focused towards the business service crowd.
	- The primary user is the IT technician/analyst.
	
CI Relationships
	- Any change in configurations can dramatically impact the performance, security, & functionality of the code & the underlying IT assets.
	
 RELEASE MANAGEMENT
 	Purpose
		- The purpose of the release management practice is to make new & changed services & features available
for use.
	Release
		 - A version of a service or other configuration item, or a collecction of configuration items, that is made available for use.
		 
What is a Release?
	- As defined inITIL, a release(also known as release package) is a set of authorized changes to an IT service or component.That means a release may include hardware, software, processes, documentation, or any other components that are necessary to successfully important an approved changes to your IT services.
	
Why Do We Need Release Management?
	- Your customers expact valuable services -- & they expect them without disruption. That makes it critical that every single release be built, tested, & delivered following a rigorous process that ensures quality & minimizes risk.
	- ITIL's Release & Deployment Management phase is designed for exactly that: ensuring that your releases are deployed into production efficiently & effectively.
	
OBJECTIVES OF RELEASE MANAGEMENT
	The primary objective of the ITIL Release & Deployment Management Process is to plan, schedule, & control the release & deployment of IT Services, & updates, to the production enviroment. It also ensures the integrity of the production enviroment by rolling out only sufficiently tested services & components.
	
Some other important objectives of Release Management are as follows:
	- Ensures faster delivery of changed services at an optimum cost
	- reduces the risk by ensuring that only authorized releases are deployed
	- Successfully & on-schedule deployment of the release package
	- Ensures that the New or changed services can meet the agreed services requirements
	- Deploying new services with minimal effect on live production processes
	- Ensures proper knowledge Transfer to Users, Operations, & Support Staff
	
SCOPE
	Some of most important CIs that are included in the scope are:
	- Virtual & physical assets.
	- Applications & software.
	- Training for staff 7 users.
	- All related contracts & agreements.

TYPES OF RELEASE
	ITIL Release
		1. Major Release : This is such a revision, that contain new hardware or software component. Generally, a major release is meant to introduce completely new functionality. These are identified by the first whole number in the version number string, such as v1.0, v2.0 etc.
		2. Minor Release : It is the means of marking significant changes/improvements to existing functionality. The minor release often contains several numbers of fixes, packaed together in one release package. The minor releases are typically denoted as the digits after the 1st decimal point, such as, v1.1, v1.2 etc.
		
		3. Emergency Release : As the words mean, it is the release to fix some bugs that need immediate attention. These often released as a temporary fix until the next major releases. Emergency releases are typically denoted by the numbers written after the 2nd decimal point, such as, v1.2.1, v3,6,9, etc.
		
APPROACHES FOR RELEASE MANAGEMENT
 Release & Deploy Management
	- Big Bang : 
		- In this approach, the new or changed service is deployed to all user areas at a single time.
		- This approach is used at the time of introducing a very critical application change & when the consistency of service accross the organization is of utmost important.
		- The negative side of the Big Bang approach is that it increases the risk & impact associated with a failed Release.
		-Ex: Deploying Emergency Security Patch to all the systems at one go to fix a critical vulnerability in the system.
		
	- Phased :
		- In this approach, services are initially deployed to a part of the user base, & if no issue observed, then the deployment is repeated for subsequent parts of the user base via a scheduled rollout plan.
		- Some scenarios such as installing new applications that take this approach to minimize the impact on current operation.
		- This is the most used deployment approach under ITIL release & deployment management process.
		-Ex: Deploying updated MS Office in various phases, first to HR, then to Finance & so on.
		
	- Push : 
		- This approach is used where the service component is deployed from a central location & pushed out to the target locations at a predefined time.
		- In terms of service deployment, it delivers updated service components to all users, either at the same time or in phases.
		- OS patch deployment through inventory management system within an organization is an example of this.
		-Ex:Security Patches are pushed to user's system; users have no choice to decline.
		
	
	- Pull :
		- This approach is used for software releases where the software is made available in a central location, & users are invited to pull the software down to their own location at their convenience.
		- Ex: Anew version of a software is made available; the user has a choice to download or ignore it.
		
	- Automated :
		- This deployment management approach utilizes the technology to automate releases.
		- This helps to ensure reputability & consistency.
		-Ex: Windows update releases or antivirus definition updates are deployed through an automated approach.
		
	- Manual : NIL
	

Release Management Process
	1- Start (RFD & FSC Approval)
	2- Plan Release (Release Plan Review) linked to 5 & 6
	3- Build Release (Test Plan Approval) linked to 4
	4- Test user Acceptance (Test Results Review)
	5- Prepare Release (Implementation Plan Approval)
	6- Deploy Release (Deployment completed successfully)
	7- End

DEPLOYMENT MANAGEMENT
	Pupose
		- To move new or changed hardware, software, documentation, process, or any other component to live environments for testing or staging.
		
		
	CSMA/CD is one such technique where different stations that follow this protocol agree on some terms and collision detection measures for effective transmission.
	
Hub: 
	-A hub is a basic networking device that connects multiple Ethernet devices in a network. 
	-It operates at the physical layer of the OSI model and simply broadcasts data to all devices connected to it. 	   -Hubs are now mostly obsolete and have been replaced by switches, which are more efficient in managing network traffic.

Switch: 
	-A switch is a more advanced networking device that operates at the data link layer of the OSI model. 
	-It connects multiple devices in a network and selectively forwards data packets to the device for which they are intended. 
	-It use MAC addresses to determine the destination of each packet, allowing for more efficient use of bandwidth compared to hubs.

Repeater: 
	-A repeater is a networking device that regenerates or amplifies signals to extend the reach of a network. 
	-It operates at the physical layer of the OSI model and is used to counteract signal degradation over long distances or due to interference. 
	-Repeaters simply replicate the signal they receive and transmit it to the next segment of the network.

Router: 
	-A router is a networking device that connects multiple networks together and forwards data packets between them. 
	-It operates at the network layer of the OSI model and uses IP addresses to determine the best path for forwarding packets. 
	-Routers are essential for connecting devices across different networks, such as connecting a local network to the internet.

Bridge: 
	-A bridge is a networking device that connects multiple network segments together and forwards traffic between them. 
	-It operates at the data link layer of the OSI model and uses MAC addresses to determine which segment to forward a packet to. 
	-Bridges are typically used to divide large networks into smaller, more manageable segments or to connect different types of network technologies.

Gateway: 
	-A gateway is a networking device that serves as an entry and exit point for data entering or leaving a network. 
	-It can perform protocol translation, data formatting, or other functions necessary to facilitate communication between different networks or between a network and external systems, such as the internet. 
	-Gateways often combine the functions of routers, bridges, and other devices to provide comprehensive 
	connectivity services.
	
	
 Various Topologies
 	1.Point-to-point topology
		-Direct connection between two devices.
		-Simplest form of network topology.
		-Used in WAN connections, such as leased lines.
	2.Bus Topology
		-All devices connected to a single backbone cable.
		-Easy to install and inexpensive.
		-Susceptible to cable failures and network traffic congestion.
	3.Star Topology
		-All devices connected to a central hub or switch.
		-Easy to install and troubleshoot.
		-Failure of a single connection does not affect other devices.
	4.Ring Topology
		-Each device is connected to two other devices, forming a closed loop.
		-Data travels in one direction around the ring.
		-Susceptible to failure if one device or connection fails.
	5.Mesh Topology
		-Every device is connected to every other device in the network.
		-High redundancy and fault tolerance.
		-Costly and complex to implement due to a large number of connections.
	6.Tree Topology
		-Hierarchical structure with multiple levels.
		-Combination of star and bus topologies.
		-Centralized control but susceptible to failure of the root node.
	7.Daisy-chain Topology
		-Devices are connected in series, one after the other.
		-Simple and inexpensive.
		-Failure of one device affects the entire chain.
	8.Hybrid Topology
		-Combination of two or more different topologies.
		-Offers flexibility and scalability.
		-Complex to design and manage compared to individual topologies.